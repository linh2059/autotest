{"name": "test_topic_validations", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6906efc95+79861]\n\tGetHandleVerifier [0x0x7ff6906efcf0+79952]\n\t(No symbol) [0x0x7ff69046cada]\n\t(No symbol) [0x0x7ff6904c4457]\n\t(No symbol) [0x0x7ff6904c471c]\n\t(No symbol) [0x0x7ff690518217]\n\t(No symbol) [0x0x7ff6904ecb1f]\n\t(No symbol) [0x0x7ff690514f8b]\n\t(No symbol) [0x0x7ff6904ec8b3]\n\t(No symbol) [0x0x7ff6904b5272]\n\t(No symbol) [0x0x7ff6904b6043]\n\tGetHandleVerifier [0x0x7ff6909ab9cd+2946349]\n\tGetHandleVerifier [0x0x7ff6909a5c4a+2922410]\n\tGetHandleVerifier [0x0x7ff6909c59d7+3052855]\n\tGetHandleVerifier [0x0x7ff69070aa7e+189918]\n\tGetHandleVerifier [0x0x7ff690712a1f+222591]\n\tGetHandleVerifier [0x0x7ff6906f8ab4+116244]\n\tGetHandleVerifier [0x0x7ff6906f8c69+116681]\n\tGetHandleVerifier [0x0x7ff6906df048+11176]\n\tBaseThreadInitThunk [0x0x7ffb594b7374+20]\n\tRtlUserThreadStart [0x0x7ffb5a9bcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b931145478299373be511505cffee3aa\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_topic_validations(driver):\n        login_page = LoginPage(driver)\n        login_page.login(\"daotc@el.net\", \"123456\")\n        go_to_question_bank(driver)\n    \n        # --- TC1: Bỏ trống tên chủ đề ---\n        open_add_topic_modal(driver)\n        new_topic(driver, \"\")\n        submit_new_topic(driver)\n        msg1 = get_error_message(driver)\n        try:\n            assert msg1 == \"Vui lòng nhập tên chủ đề 1\"\n            print(\"✅ TC1 đã Pass\")\n        except AssertionError:\n            print(f\"❌ TC1 Fail: Expected 'Vui lòng nhập tên chủ đề' but got '{msg1}'\")\n    \n        # --- TC2: Tên chủ đề dài hơn 255 ký tự ---\n        open_add_topic_modal(driver)\n        long_name = \"A\" * 256\n        new_topic(driver, long_name)\n        submit_new_topic(driver)\n        msg2 = get_error_message(driver)\n        try:\n            assert msg2 == \"Tên chủ đề không nhập quá 255 ký tự 2\"\n            print(\"✅ TC2 đã Pass\")\n        except AssertionError:\n            print(f\"❌ TC2 Fail: Expected 'Tên chủ đề không nhập quá 255 ký tự' but got '{msg2}'\")\n    \n        # --- TC2: Tên chủ đề dài hơn 255 ký tự ---\n        open_add_topic_modal(driver)\n        long_name = \"A\"\n        new_topic(driver, long_name)\n        submit_new_topic(driver)\n>       msg2 = get_error_message(driver)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTests\\Chill\\add_chu_de.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests\\Chill\\add_chu_de.py:38: in get_error_message\n    error_el = wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b931145478299373be511505cffee3aa\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001E9064D6D40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6906efc95+79861]\nE       \tGetHandleVerifier [0x0x7ff6906efcf0+79952]\nE       \t(No symbol) [0x0x7ff69046cada]\nE       \t(No symbol) [0x0x7ff6904c4457]\nE       \t(No symbol) [0x0x7ff6904c471c]\nE       \t(No symbol) [0x0x7ff690518217]\nE       \t(No symbol) [0x0x7ff6904ecb1f]\nE       \t(No symbol) [0x0x7ff690514f8b]\nE       \t(No symbol) [0x0x7ff6904ec8b3]\nE       \t(No symbol) [0x0x7ff6904b5272]\nE       \t(No symbol) [0x0x7ff6904b6043]\nE       \tGetHandleVerifier [0x0x7ff6909ab9cd+2946349]\nE       \tGetHandleVerifier [0x0x7ff6909a5c4a+2922410]\nE       \tGetHandleVerifier [0x0x7ff6909c59d7+3052855]\nE       \tGetHandleVerifier [0x0x7ff69070aa7e+189918]\nE       \tGetHandleVerifier [0x0x7ff690712a1f+222591]\nE       \tGetHandleVerifier [0x0x7ff6906f8ab4+116244]\nE       \tGetHandleVerifier [0x0x7ff6906f8c69+116681]\nE       \tGetHandleVerifier [0x0x7ff6906df048+11176]\nE       \tBaseThreadInitThunk [0x0x7ffb594b7374+20]\nE       \tRtlUserThreadStart [0x0x7ffb5a9bcc91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "661631fd-05bf-41bb-a1a3-b1e36c5bba20-attachment.txt", "type": "text/plain"}], "start": 1759374593963, "stop": 1759374602998, "uuid": "90a95e7b-5fb1-4f1d-a11b-2f20ab97e265", "historyId": "bb66522014c4ffc1386d0b4109dff8e2", "testCaseId": "bb66522014c4ffc1386d0b4109dff8e2", "fullName": "Tests.Chill.add_chu_de#test_topic_validations", "labels": [{"name": "parentSuite", "value": "Tests.Chill"}, {"name": "suite", "value": "add_chu_de"}, {"name": "host", "value": "DESKTOP-TCGMAOT"}, {"name": "thread", "value": "6652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.Chill.add_chu_de"}], "titlePath": ["Tests", "Chill", "add_chu_de.py"]}