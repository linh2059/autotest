{"name": "test_add_topic", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6d275fc95+79861]\n\tGetHandleVerifier [0x0x7ff6d275fcf0+79952]\n\t(No symbol) [0x0x7ff6d24dcada]\n\t(No symbol) [0x0x7ff6d2534457]\n\t(No symbol) [0x0x7ff6d253471c]\n\t(No symbol) [0x0x7ff6d2588217]\n\t(No symbol) [0x0x7ff6d255cb1f]\n\t(No symbol) [0x0x7ff6d2584f8b]\n\t(No symbol) [0x0x7ff6d255c8b3]\n\t(No symbol) [0x0x7ff6d2525272]\n\t(No symbol) [0x0x7ff6d2526043]\n\tGetHandleVerifier [0x0x7ff6d2a1b9cd+2946349]\n\tGetHandleVerifier [0x0x7ff6d2a15c4a+2922410]\n\tGetHandleVerifier [0x0x7ff6d2a359d7+3052855]\n\tGetHandleVerifier [0x0x7ff6d277aa7e+189918]\n\tGetHandleVerifier [0x0x7ff6d2782a1f+222591]\n\tGetHandleVerifier [0x0x7ff6d2768ab4+116244]\n\tGetHandleVerifier [0x0x7ff6d2768c69+116681]\n\tGetHandleVerifier [0x0x7ff6d274f048+11176]\n\tBaseThreadInitThunk [0x0x7ffb594b7374+20]\n\tRtlUserThreadStart [0x0x7ffb5a9bcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cfaf6bd5efa1d249dfe03a9b86c1e0e9\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_add_topic(driver):\n        helper = QuestionBankHelper(driver)\n        login_page = LoginPage(driver)\n        login_page.login(\"daotc@el.net\", \"123456\")\n        helper.go_to_question_bank()\n>       click_all_delete_icons(driver)\n\nTests\\Question\\Danh_sach.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests\\Question\\Danh_sach.py:13: in click_all_delete_icons\n    delete_button = wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cfaf6bd5efa1d249dfe03a9b86c1e0e9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000211F0032DE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6d275fc95+79861]\nE       \tGetHandleVerifier [0x0x7ff6d275fcf0+79952]\nE       \t(No symbol) [0x0x7ff6d24dcada]\nE       \t(No symbol) [0x0x7ff6d2534457]\nE       \t(No symbol) [0x0x7ff6d253471c]\nE       \t(No symbol) [0x0x7ff6d2588217]\nE       \t(No symbol) [0x0x7ff6d255cb1f]\nE       \t(No symbol) [0x0x7ff6d2584f8b]\nE       \t(No symbol) [0x0x7ff6d255c8b3]\nE       \t(No symbol) [0x0x7ff6d2525272]\nE       \t(No symbol) [0x0x7ff6d2526043]\nE       \tGetHandleVerifier [0x0x7ff6d2a1b9cd+2946349]\nE       \tGetHandleVerifier [0x0x7ff6d2a15c4a+2922410]\nE       \tGetHandleVerifier [0x0x7ff6d2a359d7+3052855]\nE       \tGetHandleVerifier [0x0x7ff6d277aa7e+189918]\nE       \tGetHandleVerifier [0x0x7ff6d2782a1f+222591]\nE       \tGetHandleVerifier [0x0x7ff6d2768ab4+116244]\nE       \tGetHandleVerifier [0x0x7ff6d2768c69+116681]\nE       \tGetHandleVerifier [0x0x7ff6d274f048+11176]\nE       \tBaseThreadInitThunk [0x0x7ffb594b7374+20]\nE       \tRtlUserThreadStart [0x0x7ffb5a9bcc91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "591b64b7-c402-48f8-a4f1-ec95f8550feb-attachment.txt", "type": "text/plain"}], "start": 1759379090216, "stop": 1759379103765, "uuid": "d40cef62-c710-4ca0-a793-87348a4429e1", "historyId": "61d941336c424c369b2ab4f7c3c79a4a", "testCaseId": "61d941336c424c369b2ab4f7c3c79a4a", "fullName": "Tests.Question.Danh_sach#test_add_topic", "labels": [{"name": "parentSuite", "value": "Tests.Question"}, {"name": "suite", "value": "Danh_sach"}, {"name": "host", "value": "DESKTOP-TCGMAOT"}, {"name": "thread", "value": "9696-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.Question.Danh_sach"}], "titlePath": ["Tests", "Question", "Danh_sach.py"]}